name: fitb_pantry_app
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 2.0.0+2

environment:
  sdk: '>=2.18.6 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  cloud_firestore: ^4.8.1
  form_validator: ^2.1.1
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  intl: ^0.18.1
  flutter_svg: ^1.1.6
  firebase_core: ^2.4.0
  get: ^4.6.1
  get_storage: ^2.0.3

  # MobX packages. MobX is a state-management library that makes it simple to connect the reactive
  # data of your application with the UI.
  # See the following page: https://pub.dev/packages/mobx
  mobx: ^2.2.0
  flutter_mobx: ^2.0.6+5

  # Simple direct Service Locator that allows to decouple the interface from a concrete
  # implementation and to access the concrete implementation from everywhere in your App
  # See the following page: https://pub.dev/packages/get_it
  get_it: ^7.6.2

  # Injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice
  # DI and inject.dart.
  # See the following page: https://pub.dev/packages/injectable
  injectable: ^2.3.0

  # AutoRoute is a declarative routing solution, where everything needed for navigation is
  # automatically generated for you.
  # See the following page: https://pub.dev/packages/auto_route
  auto_route: ^6.0.0

  # retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  # See the following page: https://pub.dev/packages/retrofit
  retrofit: ^4.0.1

  # Plugin for adapting screen and font size
  # See the following page: https://pub.dev/packages/flutter_screenutil
  flutter_screenutil: ^5.9.0
  json_serializable: ^6.5.4
  json_annotation: ^4.4.0
  email_validator: ^2.1.17

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  # A build system for Dart code generation and modular compilation.
  # See the following page: https://pub.dev/packages/build_runner
  build_runner:

  # Code generator for MobX that adds support for annotating your code with @observable, @computed,
  # @action and also creating Store classes.
  # See the following page: https://pub.dev/packages/mobx_codegen
  mobx_codegen:

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  # See the following page: https://pub.dev/packages/json_serializable
  json_annotation:
  json_serializable:

  # Injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and
  # inject.dart.
  # See the following page: https://pub.dev/packages/injectable_generator
  injectable_generator:

  # AutoRoute is a declarative routing solution, where everything needed for navigation is
  # automatically generated for you.
  # See the following page: https://pub.dev/packages/auto_route_generator
  auto_route_generator:

  # retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  # See the following page: https://pub.dev/packages/retrofit_generator
  retrofit_generator:

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Poppins
      fonts:
        - asset: fonts/Poppins-Regular.ttf
        - asset: fonts/Poppins-Medium.ttf
        - asset: fonts/Poppins-SemiBold.ttf
        - asset: fonts/Poppins-Bold.ttf  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
